{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Dreneith/Image-classification/blob/main/Cifar10.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Loading Libaries needed"
      ],
      "metadata": {
        "id": "pAsiTepo9F1A"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "FG1xcxJmJI8y"
      },
      "outputs": [],
      "source": [
        "## This cell contains the essential imports you will need â€“ DO NOT CHANGE THE CONTENTS! ##\n",
        "import torch\n",
        "import torch.nn as nn\n",
        "import torch.nn.functional as F\n",
        "import torch.optim as optim\n",
        "import torchvision\n",
        "import torchvision.transforms as transforms\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "from torch.utils.data import DataLoader\n",
        "from torchvision.utils import make_grid\n",
        "import seaborn as sns\n",
        "sns.set()\n",
        "from torchvision import models\n",
        "import time\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z2QBBC0BRRXh",
        "outputId": "d8f7b4d0-8e51-413b-fa83-61d882ef5450"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Files already downloaded and verified\n",
            "Files already downloaded and verified\n"
          ]
        }
      ],
      "source": [
        "\n",
        "# Define transforms\n",
        "from torchvision import datasets \n",
        "\n",
        "## YOUR CODE HERE ##\n",
        "train_transfroms = transforms.Compose([transforms.RandomHorizontalFlip(),\n",
        "                                       transforms.RandomCrop(32, padding =4),\n",
        "                                        transforms.RandomVerticalFlip(),\n",
        "                                       transforms.RandomRotation(15),\n",
        "                                      transforms.ToTensor()\n",
        "                                      \n",
        "                                      ])\n",
        "test_transforms = transforms.Compose([\n",
        "                                     transforms.RandomHorizontalFlip(),\n",
        "                                      transforms.RandomRotation(15),\n",
        "                                      \n",
        "                                  \n",
        "                                     transforms.ToTensor()\n",
        "                                    ])\n",
        "\n",
        "# Create training set and define training dataloader\n",
        "## YOUR CODE HERE ##\n",
        "training_data = datasets.CIFAR10('~/.pytorch/CIFAR10_data/', download = True, train = True,  transform = train_transfroms)\n",
        "#Loading onto dataloader\n",
        "train_load = DataLoader(training_data, batch_size = 64, shuffle= True)\n",
        "#validation dataset to evaluate our model with a size smaller than our model \n",
        "# I have gone for quarter of the batch size 16*0.25\n",
        "val_load = DataLoader(training_data, batch_size= 16, shuffle= True)\n",
        "\n",
        "# Create test set and define test dataloader\n",
        "## YOUR CODE HERE ##\n",
        "test_data = datasets.CIFAR10('~/.pytorch/CIFAR10_data/', download = True, train = False, transform =  test_transforms)\n",
        "test_load = DataLoader(test_data, batch_size = 64, shuffle=True)\n",
        "\n",
        "# The 10 classes in the dataset\n",
        "classes = ('plane', 'car', 'bird', 'cat', 'deer', 'dog', 'frog', 'horse', 'ship', 'truck')"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Exploring Our Dataset"
      ],
      "metadata": {
        "id": "FkpYHYfw9ZQJ"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "4L-Wd0vwTzoz"
      },
      "outputs": [],
      "source": [
        "def show5(img_loader,start,finish):\n",
        "    dataiter = iter(img_loader)\n",
        "    \n",
        "    batch = next(dataiter)\n",
        "    labels = batch[1][start: finish]\n",
        "    images = batch[0][start : finish]\n",
        "    for i in range(finish):\n",
        "        print(classes[labels[i]])\n",
        "    \n",
        "        image = images[i]\n",
        "        plt.imshow(transforms.ToPILImage()(image))\n",
        "        plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "qg-QVeZBUAzJ",
        "outputId": "a7dda831-ea9e-4507-f597-5942e6641026"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "frog\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "deer\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "horse\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "car\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "car\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "%matplotlib inline\n",
        "%config InlineBackend.figure_format = 'retina'\n",
        "#plot 5 pictures\n",
        "show5(test_load, 0, 5)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PutN9uLJWBhG",
        "outputId": "0e2eee83-6bda-4590-d663-eb397fa87055"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "train_load\n",
            "*****\n",
            "torch.Size([64, 3, 32, 32])\n",
            "torch.Size([64])\n",
            "-----------\n",
            "val_load\n",
            "*****\n",
            "torch.Size([16, 3, 32, 32])\n",
            "torch.Size([16])\n",
            "-----------\n",
            "test_load\n",
            "*****\n",
            "torch.Size([64, 3, 32, 32])\n",
            "torch.Size([64])\n",
            "-----------\n"
          ]
        }
      ],
      "source": [
        "# the size and shape of data\n",
        "data_sets = {'train_load' :train_load, 'val_load' : val_load, 'test_load': test_load}\n",
        "for i, j in data_sets.items():\n",
        "    dataiter = iter(j)\n",
        "    images, labels = next(dataiter)\n",
        "    print(i)\n",
        "    print('*****')\n",
        "    print(images.shape)\n",
        "    print(labels.shape)\n",
        "    print(\"-----------\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 874
        },
        "id": "IW62vmla4rlI",
        "outputId": "f8cc66c2-e80c-4459-cd90-9f8feb15fd5a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "train_load\n",
            "horse\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "val_load\n",
            "ship\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "test_load\n",
            "deer\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 255,
              "height": 251
            },
            "needs_background": "light"
          }
        }
      ],
      "source": [
        "#1 random pics from each datasets\n",
        "for i, j in data_sets.items():\n",
        "    print(i)\n",
        "    show5(j,0,1)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mLRL9lio4u1z",
        "outputId": "ca4c64a0-fa81-45be-8c3b-99b3e0b25900"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "torch.Size([64, 3, 32, 32])"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ],
      "source": [
        "\n",
        "images.shape"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Constructing Our Model"
      ],
      "metadata": {
        "id": "PtkdS6uq9sSC"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "w7gTUwDv5NVa"
      },
      "outputs": [],
      "source": [
        "\n",
        "#I will be buildinging 2 types of neural networks. feed_foward, convolutional and RNN\n",
        "#For the feed foward network I will be using 3 inner layer and ReLu acticvation function\n",
        "class Model_feed(nn.Module):\n",
        "    def __init__(self):\n",
        "        super().__init__()\n",
        "        #first layer\n",
        "        self.h1 = nn.Linear(3072, 824)\n",
        "        self.h_1 = nn.BatchNorm1d(824) #to help normalize our tensors\n",
        "        #inner layers\n",
        "        self.h2 = nn.Linear(824, 242)\n",
        "        self.h_2 = nn.BatchNorm1d(242)\n",
        "        self.h3 = nn.Linear(242, 84)\n",
        "        self.h_3 = nn.BatchNorm1d(84)\n",
        "        #output layer \n",
        "        self.h4 = nn.Linear(84, 10)\n",
        "        #INCLUDING A dropout function to reduce over fitting\n",
        "        self.dropout = nn.Dropout(p=0.2)\n",
        "    def forward(self, x):\n",
        "        #Flatten the tensor image\n",
        "        x = x.view(x.shape[0], -1)\n",
        "        x = self.dropout(F.relu(self.h_1(self.h1(x))))\n",
        "        \n",
        "        x = self.dropout(F.relu(self.h_2(self.h2(x))))\n",
        "        x = self.dropout(F.relu(self.h_3(self.h3(x))))\n",
        "        \n",
        "        #Output function\n",
        "        x = F.log_softmax(self.h4(x), dim =1)\n",
        "        return x\n",
        "        \n",
        "#Building a simple neural classification model with 3 layers and 256 feature maps\n",
        "class model_conv(nn.Module):\n",
        "    def __init__(self):\n",
        "        super().__init__()\n",
        "        self.first_layer = nn.Sequential(\n",
        "            nn.Conv2d(3, 32, kernel_size= 3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.BatchNorm2d(32), #To reduce overfitting\n",
        "            nn.Conv2d(32, 64, kernel_size= 3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.BatchNorm2d(64), \n",
        "            nn.MaxPool2d(2,2)\n",
        "        ) #Output size = 64 * 16 * 16\n",
        "                \n",
        "        self.second_layer  = nn.Sequential(\n",
        "            nn.Conv2d(64, 128, kernel_size= 3, stride=1, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.BatchNorm2d(128),\n",
        "            nn.Conv2d(128, 128, kernel_size= 3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.BatchNorm2d(128), \n",
        "            nn.MaxPool2d(2,2)\n",
        "        ) #output size 128 * 8 *8\n",
        "        \n",
        "        self.third_layer = nn.Sequential(\n",
        "            nn.Conv2d(128,256, kernel_size= 3, padding=1),\n",
        "            nn.ReLU(),\n",
        "            nn.BatchNorm2d(256),\n",
        "            nn.Conv2d(256, 256, kernel_size= 3, padding=1),\n",
        "            nn.BatchNorm2d(256),\n",
        "            nn.ReLU(),\n",
        "            nn.MaxPool2d(2,2)\n",
        "        )\n",
        "        \n",
        "        self.h1 = nn.Linear(256 * 4 *4, 1026)\n",
        "        self.h2 = nn.Linear(1026, 64)\n",
        "        #output function \n",
        "        self.h3 = nn.Linear(64, 10)\n",
        "        self.dropout = nn.Dropout(p = 0.25)\n",
        "        \n",
        "    def forward(self, x):\n",
        "        x = self.first_layer(x)\n",
        "        x = self.second_layer(x)\n",
        "        x = self.third_layer(x)\n",
        "        #flattening the tensor\n",
        "        x = x.view(x.shape[0], -1)\n",
        "        x = self.dropout(F.relu(self.h1(x)))\n",
        "        x = self.dropout(F.relu(self.h2(x)))\n",
        "        #output\n",
        "        output = self.h3(x)\n",
        "        return output"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xfUQ72xK5avy",
        "outputId": "a265e850-3592-4fce-a52f-54f9f400c3c0"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model_feed(\n",
            "  (h1): Linear(in_features=3072, out_features=824, bias=True)\n",
            "  (h_1): BatchNorm1d(824, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "  (h2): Linear(in_features=824, out_features=242, bias=True)\n",
            "  (h_2): BatchNorm1d(242, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "  (h3): Linear(in_features=242, out_features=84, bias=True)\n",
            "  (h_3): BatchNorm1d(84, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "  (h4): Linear(in_features=84, out_features=10, bias=True)\n",
            "  (dropout): Dropout(p=0.2, inplace=False)\n",
            ")\n",
            "model_conv(\n",
            "  (first_layer): Sequential(\n",
            "    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
            "    (1): ReLU()\n",
            "    (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "    (3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
            "    (4): ReLU()\n",
            "    (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
            "  )\n",
            "  (second_layer): Sequential(\n",
            "    (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
            "    (1): ReLU()\n",
            "    (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "    (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
            "    (4): ReLU()\n",
            "    (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
            "  )\n",
            "  (third_layer): Sequential(\n",
            "    (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
            "    (1): ReLU()\n",
            "    (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "    (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n",
            "    (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n",
            "    (5): ReLU()\n",
            "    (6): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n",
            "  )\n",
            "  (h1): Linear(in_features=4096, out_features=1026, bias=True)\n",
            "  (h2): Linear(in_features=1026, out_features=64, bias=True)\n",
            "  (h3): Linear(in_features=64, out_features=10, bias=True)\n",
            "  (dropout): Dropout(p=0.25, inplace=False)\n",
            ")\n"
          ]
        }
      ],
      "source": [
        "Model_2 = model_conv()\n",
        "Model_1 = Model_feed()\n",
        "print(Model_1)\n",
        "print(Model_2)"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Training loop"
      ],
      "metadata": {
        "id": "segbeJNW-Awx"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "V8dKlHc169S2"
      },
      "outputs": [],
      "source": [
        "def train_val (model, epoch, parameters):\n",
        "    device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "    model.to(device)\n",
        "    criterion = nn.CrossEntropyLoss()\n",
        "    optimizer = optim.Adam(parameters)\n",
        "    train_val.train_losses, train_val.test_losses = [], []\n",
        "    start = time.time()\n",
        "    for i in range(epoch):\n",
        "        running_loss = 0\n",
        "        for images, labels in train_load:\n",
        "            images, labels = images.to(device), labels.to(device)\n",
        "            pred = model(images)\n",
        "            loss = criterion(pred, labels)\n",
        "            optimizer.zero_grad()\n",
        "            loss.backward()\n",
        "            optimizer.step()\n",
        "            running_loss += loss.item()\n",
        "        \n",
        "        else:\n",
        "            with torch.no_grad():\n",
        "                test_loss = 0\n",
        "                accuracy = 0\n",
        "                model.eval()\n",
        "                for image, label in val_load:\n",
        "                    image, label = image.to(device), label.to(device)\n",
        "                    log_ps = model(image)\n",
        "                    test_los_ = criterion(log_ps, label)\n",
        "                    test_loss += test_los_.item()\n",
        "\n",
        "                    ps = torch.exp(log_ps)\n",
        "                    top_p, top_class = ps.topk(1, dim=1)\n",
        "                    equals = top_class == label.view(*top_class.shape)\n",
        "                    accuracy += torch.mean(equals.type(torch.FloatTensor))\n",
        "            train_val.train_losses.append(running_loss / len(train_load))\n",
        "            train_val.test_losses.append(test_loss / len(val_load))\n",
        "            model.train()\n",
        "            print(\"Epoch: {}/{}.. \".format(i+1, epoch),\n",
        "              \"Training Loss: {:.3f}.. \".format(running_loss/len(train_load)),\n",
        "              \"Test Loss: {:.3f}.. \".format(test_loss/len(val_load)),\n",
        "              \"Validation Dataset Accuracy: {:.2f}%\".format(accuracy/len(val_load) * 100))\n",
        "    end = time.time()\n",
        "     \n",
        "    total_time = time.strftime(\"%M:%S\", time.gmtime(end - start))\n",
        "    print(\"Timetaken to train {}sec\".format(total_time))\n",
        "\n",
        "        \n",
        "        \n",
        "def Plot_train_val(train_val):\n",
        "    %matplotlib inline \n",
        "    %config InlineBackend.fiigure_format = 'retina'\n",
        "    import seaborn as sns \n",
        "    sns.set()\n",
        "    \n",
        "    plt.plot(train_val.train_losses, label = 'train_loss')\n",
        "    plt.plot(train_val.test_losses, label = 'test_loss')\n",
        "    plt.title('Training Loss and Test Loss')\n",
        "    plt.legend(frameon = False)\n",
        "    \n",
        "        \n",
        "        \n",
        "def predictions(model, test_data):\n",
        "   device = torch.device(\"cuda\" if torch.cuda.is_available() else \"cpu\")\n",
        "   model.to(device)\n",
        "   accuracy = 0\n",
        "   with torch.no_grad():\n",
        "        for images, labels in test_data:\n",
        "            images, labels = images.to(device), labels.to(device)\n",
        "            log_ps = model(images)\n",
        "\n",
        "            ps = torch.exp(log_ps)\n",
        "            top_p, top_class = ps.topk(1, dim=1)\n",
        "            equals = top_class == labels.view(*top_class.shape)\n",
        "            accuracy += torch.mean(equals.type(torch.FloatTensor))\n",
        "   print(\"Accuracy: {:.2f}\".format(accuracy/ len(test_data) * 100))\n",
        "                    \n",
        "        "
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Model Training"
      ],
      "metadata": {
        "id": "9khET5uV-UBL"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sbATMEUbMLqR",
        "outputId": "cdfbe080-fec9-4304-8200-97e655420fa7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch: 1/30..  Training Loss: 1.950..  Test Loss: 1.834..  Validation Dataset Accuracy: 33.49%\n",
            "Epoch: 2/30..  Training Loss: 1.826..  Test Loss: 1.766..  Validation Dataset Accuracy: 35.35%\n",
            "Epoch: 3/30..  Training Loss: 1.774..  Test Loss: 1.710..  Validation Dataset Accuracy: 37.89%\n",
            "Epoch: 4/30..  Training Loss: 1.733..  Test Loss: 1.671..  Validation Dataset Accuracy: 39.10%\n",
            "Epoch: 5/30..  Training Loss: 1.708..  Test Loss: 1.644..  Validation Dataset Accuracy: 40.05%\n",
            "Epoch: 6/30..  Training Loss: 1.684..  Test Loss: 1.625..  Validation Dataset Accuracy: 40.39%\n",
            "Epoch: 7/30..  Training Loss: 1.665..  Test Loss: 1.581..  Validation Dataset Accuracy: 42.94%\n",
            "Epoch: 8/30..  Training Loss: 1.650..  Test Loss: 1.581..  Validation Dataset Accuracy: 42.23%\n",
            "Epoch: 9/30..  Training Loss: 1.639..  Test Loss: 1.566..  Validation Dataset Accuracy: 43.43%\n",
            "Epoch: 10/30..  Training Loss: 1.626..  Test Loss: 1.536..  Validation Dataset Accuracy: 44.08%\n",
            "Epoch: 11/30..  Training Loss: 1.613..  Test Loss: 1.562..  Validation Dataset Accuracy: 43.72%\n",
            "Epoch: 12/30..  Training Loss: 1.605..  Test Loss: 1.517..  Validation Dataset Accuracy: 44.89%\n",
            "Epoch: 13/30..  Training Loss: 1.595..  Test Loss: 1.512..  Validation Dataset Accuracy: 44.96%\n",
            "Epoch: 14/30..  Training Loss: 1.582..  Test Loss: 1.500..  Validation Dataset Accuracy: 45.76%\n",
            "Epoch: 15/30..  Training Loss: 1.576..  Test Loss: 1.490..  Validation Dataset Accuracy: 45.88%\n",
            "Epoch: 16/30..  Training Loss: 1.572..  Test Loss: 1.471..  Validation Dataset Accuracy: 46.95%\n",
            "Epoch: 17/30..  Training Loss: 1.562..  Test Loss: 1.469..  Validation Dataset Accuracy: 46.91%\n",
            "Epoch: 18/30..  Training Loss: 1.562..  Test Loss: 1.468..  Validation Dataset Accuracy: 46.92%\n",
            "Epoch: 19/30..  Training Loss: 1.551..  Test Loss: 1.451..  Validation Dataset Accuracy: 47.80%\n",
            "Epoch: 20/30..  Training Loss: 1.547..  Test Loss: 1.449..  Validation Dataset Accuracy: 47.87%\n",
            "Epoch: 21/30..  Training Loss: 1.537..  Test Loss: 1.443..  Validation Dataset Accuracy: 48.15%\n",
            "Epoch: 22/30..  Training Loss: 1.532..  Test Loss: 1.432..  Validation Dataset Accuracy: 48.29%\n",
            "Epoch: 23/30..  Training Loss: 1.524..  Test Loss: 1.430..  Validation Dataset Accuracy: 48.20%\n",
            "Epoch: 24/30..  Training Loss: 1.519..  Test Loss: 1.442..  Validation Dataset Accuracy: 48.26%\n",
            "Epoch: 25/30..  Training Loss: 1.522..  Test Loss: 1.415..  Validation Dataset Accuracy: 49.20%\n",
            "Epoch: 26/30..  Training Loss: 1.518..  Test Loss: 1.420..  Validation Dataset Accuracy: 48.96%\n",
            "Epoch: 27/30..  Training Loss: 1.506..  Test Loss: 1.399..  Validation Dataset Accuracy: 49.66%\n",
            "Epoch: 28/30..  Training Loss: 1.503..  Test Loss: 1.406..  Validation Dataset Accuracy: 49.80%\n",
            "Epoch: 29/30..  Training Loss: 1.499..  Test Loss: 1.389..  Validation Dataset Accuracy: 49.87%\n",
            "Epoch: 30/30..  Training Loss: 1.494..  Test Loss: 1.384..  Validation Dataset Accuracy: 50.44%\n",
            "Timetaken to train 18:56sec\n"
          ]
        }
      ],
      "source": [
        "train_val(Model_1, epoch=30, parameters=Model_1.parameters() )"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        },
        "id": "mCB5RfQSMfi8",
        "outputId": "4cb38dfe-0fd3-4f6b-c002-e4cce2df42dc"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "image/png": {
              "width": 378,
              "height": 266
            }
          }
        }
      ],
      "source": [
        "# Training Loss and Test loss for Feed forward Network\n",
        "Plot_train_val(train_val)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GP89TL-a-23p",
        "outputId": "e7f9c86f-ae42-4c23-a19e-a05de2234f34"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch: 1/20..  Training Loss: 1.847..  Test Loss: 1.664..  Validation Dataset Accuracy: 38.86%\n",
            "Epoch: 2/20..  Training Loss: 1.520..  Test Loss: 1.387..  Validation Dataset Accuracy: 47.79%\n",
            "Epoch: 3/20..  Training Loss: 1.353..  Test Loss: 1.245..  Validation Dataset Accuracy: 54.73%\n",
            "Epoch: 4/20..  Training Loss: 1.215..  Test Loss: 1.142..  Validation Dataset Accuracy: 59.36%\n",
            "Epoch: 5/20..  Training Loss: 1.102..  Test Loss: 0.970..  Validation Dataset Accuracy: 65.50%\n",
            "Epoch: 6/20..  Training Loss: 1.009..  Test Loss: 0.916..  Validation Dataset Accuracy: 67.64%\n",
            "Epoch: 7/20..  Training Loss: 0.950..  Test Loss: 0.913..  Validation Dataset Accuracy: 68.17%\n",
            "Epoch: 8/20..  Training Loss: 0.891..  Test Loss: 0.810..  Validation Dataset Accuracy: 71.81%\n",
            "Epoch: 9/20..  Training Loss: 0.837..  Test Loss: 0.743..  Validation Dataset Accuracy: 74.30%\n",
            "Epoch: 10/20..  Training Loss: 0.800..  Test Loss: 0.824..  Validation Dataset Accuracy: 71.33%\n",
            "Epoch: 11/20..  Training Loss: 0.762..  Test Loss: 0.709..  Validation Dataset Accuracy: 75.19%\n",
            "Epoch: 12/20..  Training Loss: 0.728..  Test Loss: 0.703..  Validation Dataset Accuracy: 75.48%\n",
            "Epoch: 13/20..  Training Loss: 0.702..  Test Loss: 0.643..  Validation Dataset Accuracy: 77.86%\n",
            "Epoch: 14/20..  Training Loss: 0.671..  Test Loss: 0.590..  Validation Dataset Accuracy: 79.67%\n",
            "Epoch: 15/20..  Training Loss: 0.652..  Test Loss: 0.585..  Validation Dataset Accuracy: 79.56%\n",
            "Epoch: 16/20..  Training Loss: 0.632..  Test Loss: 0.561..  Validation Dataset Accuracy: 80.37%\n",
            "Epoch: 17/20..  Training Loss: 0.608..  Test Loss: 0.551..  Validation Dataset Accuracy: 80.83%\n",
            "Epoch: 18/20..  Training Loss: 0.597..  Test Loss: 0.525..  Validation Dataset Accuracy: 81.50%\n",
            "Epoch: 19/20..  Training Loss: 0.580..  Test Loss: 0.571..  Validation Dataset Accuracy: 80.41%\n",
            "Epoch: 20/20..  Training Loss: 0.564..  Test Loss: 0.526..  Validation Dataset Accuracy: 81.79%\n",
            "Timetaken to train 17:36sec\n"
          ]
        }
      ],
      "source": [
        "#Training the CNN model\n",
        "train_val(Model_2, epoch= 20, parameters= Model_2.parameters())"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Making Predictions on our Model"
      ],
      "metadata": {
        "id": "7IzDexlo_IG8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Prediction on the Feed foward network\n",
        "predictions(Model_1, test_load)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XXHZHvBW_PFc",
        "outputId": "6a2c98c7-48c9-4e0d-902b-d90e74023436"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 45.71\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Prediction for the CNN model\n",
        "predictions(Model_2, test_load)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H6yDrMeTMykX",
        "outputId": "bbf3e9eb-0fe1-479a-de8b-af99c39b1b3e"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Accuracy: 78.25\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Summary"
      ],
      "metadata": {
        "id": "wXNV6dZQNF1g"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Trainable params for Feed Foward network\n",
        "from torchsummary import summary\n",
        "summary(Model_1, (3,32,32))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "S8J-FfTENLvY",
        "outputId": "e3e4604a-b9aa-4883-a067-b103e4931254"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "----------------------------------------------------------------\n",
            "        Layer (type)               Output Shape         Param #\n",
            "================================================================\n",
            "            Linear-1                  [-1, 824]       2,532,152\n",
            "       BatchNorm1d-2                  [-1, 824]           1,648\n",
            "           Dropout-3                  [-1, 824]               0\n",
            "            Linear-4                  [-1, 242]         199,650\n",
            "       BatchNorm1d-5                  [-1, 242]             484\n",
            "           Dropout-6                  [-1, 242]               0\n",
            "            Linear-7                   [-1, 84]          20,412\n",
            "       BatchNorm1d-8                   [-1, 84]             168\n",
            "           Dropout-9                   [-1, 84]               0\n",
            "           Linear-10                   [-1, 10]             850\n",
            "================================================================\n",
            "Total params: 2,755,364\n",
            "Trainable params: 2,755,364\n",
            "Non-trainable params: 0\n",
            "----------------------------------------------------------------\n",
            "Input size (MB): 0.01\n",
            "Forward/backward pass size (MB): 0.03\n",
            "Params size (MB): 10.51\n",
            "Estimated Total Size (MB): 10.55\n",
            "----------------------------------------------------------------\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Training params for CNN model\n",
        "summary(Model_2, (3,32,32))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H-nlY8ufNYid",
        "outputId": "7411e7d0-7605-459c-9af1-44356aaaf358"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "----------------------------------------------------------------\n",
            "        Layer (type)               Output Shape         Param #\n",
            "================================================================\n",
            "            Conv2d-1           [-1, 32, 32, 32]             896\n",
            "              ReLU-2           [-1, 32, 32, 32]               0\n",
            "       BatchNorm2d-3           [-1, 32, 32, 32]              64\n",
            "            Conv2d-4           [-1, 64, 32, 32]          18,496\n",
            "              ReLU-5           [-1, 64, 32, 32]               0\n",
            "       BatchNorm2d-6           [-1, 64, 32, 32]             128\n",
            "         MaxPool2d-7           [-1, 64, 16, 16]               0\n",
            "            Conv2d-8          [-1, 128, 16, 16]          73,856\n",
            "              ReLU-9          [-1, 128, 16, 16]               0\n",
            "      BatchNorm2d-10          [-1, 128, 16, 16]             256\n",
            "           Conv2d-11          [-1, 128, 16, 16]         147,584\n",
            "             ReLU-12          [-1, 128, 16, 16]               0\n",
            "      BatchNorm2d-13          [-1, 128, 16, 16]             256\n",
            "        MaxPool2d-14            [-1, 128, 8, 8]               0\n",
            "           Conv2d-15            [-1, 256, 8, 8]         295,168\n",
            "             ReLU-16            [-1, 256, 8, 8]               0\n",
            "      BatchNorm2d-17            [-1, 256, 8, 8]             512\n",
            "           Conv2d-18            [-1, 256, 8, 8]         590,080\n",
            "      BatchNorm2d-19            [-1, 256, 8, 8]             512\n",
            "             ReLU-20            [-1, 256, 8, 8]               0\n",
            "        MaxPool2d-21            [-1, 256, 4, 4]               0\n",
            "           Linear-22                 [-1, 1026]       4,203,522\n",
            "          Dropout-23                 [-1, 1026]               0\n",
            "           Linear-24                   [-1, 64]          65,728\n",
            "          Dropout-25                   [-1, 64]               0\n",
            "           Linear-26                   [-1, 10]             650\n",
            "================================================================\n",
            "Total params: 5,397,708\n",
            "Trainable params: 5,397,708\n",
            "Non-trainable params: 0\n",
            "----------------------------------------------------------------\n",
            "Input size (MB): 0.01\n",
            "Forward/backward pass size (MB): 4.74\n",
            "Params size (MB): 20.59\n",
            "Estimated Total Size (MB): 25.34\n",
            "----------------------------------------------------------------\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "2v7ANodcNq2h"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "accelerator": "GPU",
    "colab": {
      "collapsed_sections": [],
      "name": "Cifar10.ipynb",
      "provenance": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyOF5cam2a57hKlcmYMS7dkY",
      "include_colab_link": true
    },
    "gpuClass": "standard",
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
